:root {
   --uom: 1rem;
   --max-aside: 4in;
   --max-article: 6.25in;
   --safe-area-inset-top: env(safe-area-inset-top, 0px);
   --safe-area-inset-right: env(safe-area-inset-right, 0px);
   --safe-area-inset-bottom: env(safe-area-inset-bottom, 0px);
   --safe-area-inset-left: env(safe-area-inset-left, 0px);
}

body {
   border: 0;
   margin: 0;
   padding: 0;
   display: flex;
   flex-flow: row-reverse wrap;
   -webkit-text-size-adjust: 100%;
   box-sizing: initial; /* box-sizing: border-box does not work with -webkit-fill-available. It could have spared a lot of calc statements, but I tried it, doesn't work. don't bother. */
   overflow-x: hidden;
}

header,
aside,
article {
   border: 0;
   margin: 0;
   padding: calc(var(--uom) + var(--safe-area-inset-top) + calc(var(--uom) * 2) + calc(var(--uom) * 1.5)) var(--uom) calc(var(--uom) + var(--safe-area-inset-bottom)) var(--uom);
}

header {
   min-height: calc(100vh - calc(var(--uom) * 2));
   min-height: -webkit-fill-available;
   max-height: calc(100vh - calc(var(--uom) * 2) - var(--safe-area-inset-top) - var(--safe-area-inset-bottom) - calc(var(--uom) * 2) - calc(var(--uom) * 1.5));
   position: -webkit-sticky;
   position: sticky;
   top: 0;
   padding-left: calc(var(--uom) + var(--safe-area-inset-left));
}

article ~ header {
   /*          100vh - article width      - padding * 4 (for left and right padding of 2 elements) */
   width: calc(100vw - var(--max-article) - calc(var(--uom) * 4) - var(--safe-area-inset-left));
}

aside + header {
   width: calc(100vw - var(--max-aside) - calc(var(--uom) * 4) - var(--safe-area-inset-left));
}

article + aside + header {
   width: calc(100vw - var(--max-article) - var(--max-aside) - calc(var(--uom) * 6) - var(--safe-area-inset-left));
}

aside {
   width: 100%;
   height: 100%;
   max-width: calc(var(--max-aside) - var(--safe-area-inset-right));
   padding-right: calc(var(--uom) + var(--safe-area-inset-right));
}

article + aside {
   position: -webkit-sticky;
   position: sticky;
   top: 0;
   height: 100%;
   max-height: calc(100vh - calc(var(--uom) * 2) - var(--safe-area-inset-top) - var(--safe-area-inset-bottom) - calc(var(--uom) * 2) - calc(var(--uom) * 1.5));
   overflow: scroll;
   max-width: var(--max-aside);
   padding-right: var(--uom);
}

article {
   min-height: 100vh;
   min-height: -webkit-fill-available;
   width: 100%;
   max-width: calc(var(--max-article) - var(--safe-area-inset-right));
   padding-right: calc(var(--uom) + var(--safe-area-inset-right));
}

/* navigation bar styling */
nav {
   margin: calc(calc(var(--safe-area-inset-top) * -1) - var(--uom) - calc(var(--uom) * 2) - calc(var(--uom) * 1.5)) calc(var(--uom) * -1) var(--uom) calc(var(--uom) * -1);
   padding: calc(var(--uom) + var(--safe-area-inset-top)) var(--uom) var(--uom) var(--uom);
   height: 1.5rem;
   background-color: rgba(255,255,255,.2);
   width: 100%;
   max-width: 100%;
   white-space: nowrap;
   overflow-x: auto;
   overflow-y: hidden;
   -webkit-overflow-scrolling: auto;
}

aside nav,
article nav {
   background-color: #f5f5f5;
}

@media screen and (prefers-color-scheme: dark) {
   nav {
      background-color: rgba(0,0,0,.2);
   }
   aside nav,
   article nav {
      background-color: #191919;
   }
}

nav > a {
   margin: 0;
   line-height: calc(var(--uom) * 1.5);
   display: inline-block;
   padding: 0 var(--uom);
}

nav > :first-child {
   padding-left: 0;
}

nav > :last-child {
   padding-right: 0;
}

header > nav {
   margin-left: calc(calc(var(--uom) * -1) - var(--safe-area-inset-left));
   padding-left: calc(var(--uom) + var(--safe-area-inset-left));
}

aside > nav {
   position: -webkit-sticky;
   position: sticky;
   top: 0;
   left: 0;
   z-index: 1;
   margin-right: calc(calc(var(--uom) * -1) - var(--safe-area-inset-right));
   padding-right: calc(var(--uom) + var(--safe-area-inset-right));
}

article + aside > nav {
   margin-right: calc(var(--uom) * -1);
   padding-right: var(--uom);
   position: fixed;
   top: calc(var(--uom) + var(--safe-area-inset-top) + calc(var(--uom) * 2) + calc(var(--uom) * 1.5));
   left: calc(100vw - var(--max-article) - var(--max-aside) - calc(var(--uom) * 3));
   z-index: 1;
   width: calc(var(--max-aside));
}

article > nav {
   position: -webkit-sticky;
   position: sticky;
   top: 0;
   margin-right: calc(calc(var(--uom) * -1) - var(--safe-area-inset-right));
   padding-right: calc(var(--uom) + var(--safe-area-inset-right));
}

/* anchor tag stylings */
a,
a:link,
a:visited,
a:active {
   text-decoration: none;
   color: #3387CC;
   font-weight: 400;
}

a:hover {
   text-decoration: underline;
}

@media screen and (prefers-color-scheme: dark) {
   a,
   a:link,
   a:hover,
   a:visited,
   a:active {
      color: #2573b3;
   }
}


/* the width of a tablet in landscape (and lower): hide the aside, override width of header to account for hidden aside */
@media (max-width: 1700px){
   article + aside {
      display: none;
   }

   article + aside + header {
      /*          100vh - article width      - padding * 4 (for left and right padding of 2 elements) */
      width: calc(100vw - var(--max-article) - calc(var(--uom) * 4) - var(--safe-area-inset-left));
   }
}

/* hide the header when smaller than a desktop, and center the article (~< ipad tablet max portrait width 1024) */
@media (max-width: 1022px){
   article ~ header {
      display: none;
   }

   article {
      margin: 0 auto;
      width: calc(var(--max-article) - var(--safe-area-inset-left));
      padding-left: calc(var(--uom) + var(--safe-area-inset-left));
   }

   article > nav {
      position: fixed;
      top: calc(var(--uom) + calc(var(--uom) * 3.5) + var(--safe-area-inset-top));
      left: var(--uom);
      padding-left: calc(var(--uom) + var(--safe-area-inset-left));
      padding-right: calc(var(--uom) + var(--safe-area-inset-right));
      width: calc(100% - calc(var(--uom) * 2) - var(--safe-area-inset-left) - var(--safe-area-inset-right));
   }
}

/* mobile portrait gets stacked (header/aside).
   mobile landscape (on a very small screen) gets stacked too,
   to achieve this we: unset position sticky and change the flex-flow */
@media (orientation: portrait) and (max-width: 7.5in), (orientation: landscape) and (max-width: 7.5in) {
   body {
      flex-flow: row-reverse wrap-reverse;
   }

   aside + header {
      width: calc(100vw - calc(var(--uom) * 2));
      position: initial;
   }

   aside {
      max-width: calc(100vw - calc(var(--uom) * 2));
      padding-left: calc(var(--uom) + var(--safe-area-inset-left));
   }
   header > nav {
      width: calc(100vw - calc(var(--uom) * 2) - var(--safe-area-inset-left) - var(--safe-area-inset-right));
      padding-right: calc(var(--uom) + var(--safe-area-inset-right));
   }
   aside > nav {
      width: calc(100vw - calc(var(--uom) * 2) - var(--safe-area-inset-left) - var(--safe-area-inset-right));
      padding-left: calc(var(--uom) + var(--safe-area-inset-left));
      padding-right: calc(var(--uom) + var(--safe-area-inset-right));
      margin-left: calc(calc(var(--safe-area-inset-left) * -1) - var(--uom));
   }
}

/* amp stuff */
body.amp {
   display: block;
}

body.amp > aside,
body.amp > header { /* never show the header or aside on an amp page, articles are for amp pages, not the whole site */
   display: none;
}

body.amp > article {
   margin: 0 auto;
   width: calc(100vw - var(--safe-area-inset-left) - var(--safe-area-inset-right) - calc(var(--uom) * 2));
   max-width: calc(calc(var(--max-article) * 2) - calc(var(--uom) * 2) - var(--safe-area-inset-left) - var(--safe-area-inset-right));
   padding-left: calc(var(--uom) + var(--safe-area-inset-left));
   padding-right: calc(var(--uom) + var(--safe-area-inset-right));
}

body.amp > article > nav {
   left: 0;
   right: 0;
   position: fixed;
   margin: 0;
   top: 0;
   width: calc(100vw - calc(var(--uom) * 2) - var(--safe-area-inset-left) - var(--safe-area-inset-right));
   padding-left: calc(var(--uom) + var(--safe-area-inset-left));
   padding-right: calc(var(--uom) + var(--safe-area-inset-right));
}

/* scrollbar stuff that I'm not sure works */
body::-webkit-scrollbar-track {
   box-shadow: inset 0 0 6px rgba(0,0,0,.1);
   -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.1);
   background-color: transparent;
}

body::-webkit-scrollbar {
   background-color: transparent;
}

body::-webkit-scrollbar-thumb {
   box-shadow: inset 0 0 6px rgba(0,0,0,.3);
   -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);
   background-color: transparent;
}

body::-webkit-scrollbar,
aside::-webkit-scrollbar,
article::-webkit-scrollbar { /* Hide scrollbar for Chrome, Safari and Opera */
   display: none;
}

body,
aside,
article { /* Hide scrollbar for IE, Edge and Firefox */
   -ms-overflow-style: none;  /* IE and Edge */
   scrollbar-width: none;  /* Firefox */
}
